@model IEnumerable<DailyTrack.Models.Activity>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    <input type="text" id="newActivityName" />
    <input type="button" value="Add Activity" onclick="addNewActivity()" />
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>

    <p> Name :<span data-bind="text: Name"></span></p>
    <p>Name <input data-bind="value: Name" /></p>

    <h2>Activity type</h2>
    <div data-bind ="template: 'typeATemplate'"></div>
    <script id="typeATemplate" type="text/html">
        <ul>
            {{each(index,typeA)typesA}}
                <li>${typeA.name}</li>
            {{/each}}
        </ul>
    </script>
   //<button data-bind="click: addActivity"
}

</table>
@section Scripts {
    <script type="text/javascript">

        function typeA(name) {
            return {
                name: ko.observable(name)
            };
        }
       // var addNewActivity = function() {
         //   var name = $('#newActivityName').val();
           // $.ajax({
             //   url: "/api/activities",
               // method: "POST",
                //data: {
                  //  id:-1,
                    //name: name
                //}
            //}).done(function (data) {
              //  alert(data);
           // })
        //}

        //$.ajax({
          //  url: "/api/activities",
            //method: "GET",
        //}).done(function (data) {
            //alert(data.length);
        //})

        //var test = {
        //    a: "test",
        //    b: 123,
        //    c: function (f) {
        //        f();
        //    }
        //};
        //test['c'](function () { alert('test') });

        var viewModel = {
            Name: ko.observable("Shopping"),
            typesA: ko.observableArray([new typeA("Study"),new typeA("Phisical")])
        };
        ko.applyBindings(viewModel);
    </script>
}