@model IEnumerable<DailyTrack.Models.Activity>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    <input type="text" id="newActivityName" />
    <input type="button" value="Add Activity" onclick="addNewActivity()" />
</p>

    <h2>Your daily activities</h2>

    <table>
        <thead>
            <tr>
                <th>Completed</th>
                <th>Activity</th>
                <th>Type</th>
                <th>StartActivity</th>
                <th></th>
            </tr>
        </thead>
       
        <tbody data-bind="foreach: Activities">
            <tr>
                <td><input type="checkbox" data-bind="checked: Completed" /> </td>
                <td data-bind="text: name"></td>
                <td data-bind="text: ActivityType().nameActivityType"></td>
                <td data-bind="text: createDate"></td>
            </tr>
        </tbody>
    </table>
@section Scripts {
    <script type="text/javascript">

        function Activity(data, initialType) {
            var self = this;
            self.Completed = ko.observable(false);
            self.name = data.name || '';
            self.createDate = data.createDate || '';
            self.ActivityType = ko.observable(initialType);

            self.Completed.subscribe(function (newValue) {
                alert(self.name + newValue);
            })
        }

        function ActivitiesViewModel() {
            var self = this;
            self.availableTypes = [
                { nameActivityType: "study" ,start:3},
                { nameActivityType: "exercises",start:4},
                { nameActivityType: "groceries",start:5}
            ];
    
            self.Activities = ko.observableArray();

            self.fnGetActivities = function () {
                $.ajax({
                    url: "/api/activities",
                    method: "GET",
                }).done(function (data) {
                    var result = $.map(data, function (item, index) {
                        return new Activity(item, self.availableTypes[0]);
                    });
                    self.Activities(result);
                })
            }
            self.fnGetActivities();
        }
        ko.applyBindings(new ActivitiesViewModel());

    </script>
}